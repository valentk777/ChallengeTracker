name: "Build Android app"

on:
  push:
    branches:
      - main

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout the main GitHub branch
        uses: actions/checkout@v3
        with:
          lfs: 'true'
          
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.17
        
      - name: Install dependencies
        run: npm install

      - name: Cache Gradle Wrapper
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
  
      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Get Product current version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        
      - name: List versions
        run: |
          cd android
          ./gradlew -version
          echo Product version:       ${{ steps.package-version.outputs.current-version }}
          node --version
          
      - name: Decode Keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'my-upload-key.keystore'
          fileDir: '/home/runner/work/ChallengeTracker/ChallengeTracker/android/'
          encodedString: ${{ secrets.TEST_SECRET }}
                    
      - name: Decode Keystore to another location
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'my-upload-key.keystore'
          fileDir: '/home/runner/work/ChallengeTracker/ChallengeTracker/android/app/'
          encodedString: ${{ secrets.TEST_SECRET }}
          
      - name: Decode Keystore
        env:
          CERTIFICATE_BASE64: ${{ secrets.TEST_SECRET }}
        run: |
          echo $CERTIFICATE_BASE64 | base64 --decode > test.keystore 
          cat test.keystore

      - name: Test signing
        env:
          ANDROID_SIGNING_ALIAS: ${{ secrets.ANDROID_SIGNING_ALIAS }}
          ANDROID_SIGNING_KEY_PASSWORD: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
          ANDROID_SIGNING_STORE_PASSWORD: ${{ secrets.ANDROID_SIGNING_STORE_PASSWORD }}
          temp: ${{ secrets.ANDROID_SIGNING_KEY }}
        run: |
          cd android
          chmod +x ./gradlew
          echo $ANDROID_SIGNING_ALIAS
          echo $ANDROID_SIGNING_KEY_PASSWORD
          echo $ANDROID_SIGNING_STORE_PASSWORD
          echo $temp
          cat "app/my-upload-key.keystore"
          ./gradlew signingReport

      # - name: Build signed Android release
      #   env:
      #     SIGNING_KEY_ALIAS: ${{ secrets.ANDROID_SIGNING_ALIAS }}
      #     SIGNING_KEY_PASSWORD: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
      #     SIGNING_STORE_PASSWORD: ${{ secrets.ANDROID_SIGNING_STORE_PASSWORD }}
      #   run: |
      #     cd android

      #     echo 'Start testing - xxxxxxxxxx'
      #     ls
      #     echo 'xxxxxxxxxx'
      #     cd app
      #     ls
      #     cd ..
      #     echo 'End testing - xxxxxxxxxx'
          
      #     chmod +x ./gradlew
      #     ./gradlew bundleRelease --no-daemon
      #     cp /home/runner/work/ChallengeTracker/ChallengeTracker/android/app/build/outputs/bundle/release/app-release.aab /home/runner/work/ChallengeTracker/ChallengeTracker/app-release.aab

      # - name: Upload Artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: Signed App Bundle v-${{ steps.package-version.outputs.current-version }}
      #     path: /home/runner/work/ChallengeTracker/ChallengeTracker/app-release.aab

      # - name: Upload App to Google Play
      #   uses: r0adkll/upload-google-play@v1
      #   with:
      #     serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
      #     packageName: com.baitupasaulis.challengetracker
      #     releaseFiles: /home/runner/work/ChallengeTracker/ChallengeTracker/app-release.aab
      #     track: production
      #     status: completed

